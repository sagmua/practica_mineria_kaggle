head(DS)
personas = as(DS, "transactions")
itemFrequencyPlot(personas, support = 0.1, cex.names=0.8)
itemsets = apriori(personas, parameter = list(support = 0.1, target = "frequent", minlen=2))
itemsets = sort(itemsets, by="support")
#inspect(subset(itemsets))
inspect(subset(itemsets, subset = items %pin% "Gender=" & items %in% "ExtramaritalSex=No"))
reglas = apriori(personas, parameter = list(support = 0.1, confidence = 0.8, minlen = 2))
rulesSorted = sort(reglas, by = "confidence")
subsetMatrix <- is.subset(rulesSorted, rulesSorted)
subsetMatrix[lower.tri(subsetMatrix, diag=TRUE)] <- FALSE
redundant <- colSums(subsetMatrix, na.rm=TRUE) >= 1
rulesPruned <- rulesSorted[!redundant] # remove redundant rules
sin_redundantes = rulesPruned[-c(1,3,5,7,9,13,17,20)]
inspect(sin_redundantes)
reglas2 = apriori(personas, parameter = list(support = 0.1, confidence = 0.8, minlen = 2))
rulesSorted2 = sort(reglas2, by = "confidence")
subsetMatrix2 <- is.subset(rulesSorted2, rulesSorted2)
subsetMatrix2[lower.tri(subsetMatrix2, diag=TRUE)] <- FALSE
redundant2 <- colSums(subsetMatrix2, na.rm=TRUE) >= 1
rulesPruned2 <- rulesSorted[!redundant2] # remove redundant rules
reglas2
reglas2
rulesPruned2
rulesPruned
reglas2 = apriori(personas, parameter = list( confidence = 0.5, lift=1.2, minlen = 2))
reglas2 = apriori(personas, parameter = list( confidence = 0.5, minlen = 2))
rulesSorted2 = sort(reglas2, by = "confidence")
subsetMatrix2 <- is.subset(rulesSorted2, rulesSorted2)
subsetMatrix2[lower.tri(subsetMatrix2, diag=TRUE)] <- FALSE
redundant2 <- colSums(subsetMatrix2, na.rm=TRUE) >= 1
rulesPruned2 <- rulesSorted[!redundant2] # remove redundant rules
knitr::opts_chunk$set(echo = TRUE)
library(arules)
library(dummies)
DS = read.csv("PreSex.csv")
DS = DS[,-1]
DS
DS <- DS[rep(row.names(DS), DS$Freq), 1:(ncol(DS)-1)]
head(DS)
summary(DS)
DS = dummy.data.frame(DS, names = c("MaritalStatus"))
DS$MaritalStatusDivorced = as.factor(DS$MaritalStatusDivorced)
DS$MaritalStatusMarried = as.factor(DS$MaritalStatusMarried)
levels(DS$MaritalStatusDivorced)
levels(DS$MaritalStatusDivorced) = c("No", "Yes")
levels(DS$MaritalStatusMarried) = c("No", "Yes")
colnames(DS)[1:2] = c("Divorced", "Married")
head(DS)
personas = as(DS, "transactions")
itemFrequencyPlot(personas, support = 0.1, cex.names=0.8)
itemsets = apriori(personas, parameter = list(support = 0.1, target = "frequent", minlen=2))
itemsets = sort(itemsets, by="support")
#inspect(subset(itemsets))
inspect(subset(itemsets, subset = items %pin% "Gender=" & items %in% "ExtramaritalSex=No"))
reglas = apriori(personas, parameter = list(support = 0.1, confidence = 0.8, minlen = 2))
rulesSorted = sort(reglas, by = "confidence")
subsetMatrix <- is.subset(rulesSorted, rulesSorted)
subsetMatrix[lower.tri(subsetMatrix, diag=TRUE)] <- FALSE
redundant <- colSums(subsetMatrix, na.rm=TRUE) >= 1
rulesPruned <- rulesSorted[!redundant] # remove redundant rules
sin_redundantes = rulesPruned[-c(1,3,5,7,9,13,17,20)]
inspect(sin_redundantes)
reglas2 = apriori(personas, parameter = list( confidence = 0.5, minlen = 2))
rulesSorted2 = sort(reglas2, by = "confidence")
subsetMatrix2 <- is.subset(rulesSorted2, rulesSorted2)
subsetMatrix2[lower.tri(subsetMatrix2, diag=TRUE)] <- FALSE
redundant2 <- colSums(subsetMatrix2, na.rm=TRUE) >= 1
rulesPruned2 <- rulesSorted2[!redundant2] # remove redundant rules
inspect(rulesPruned2)
knitr::opts_chunk$set(echo = TRUE)
library(arules)
library(dummies)
DS = read.csv("PreSex.csv")
DS = DS[,-1]
DS
DS <- DS[rep(row.names(DS), DS$Freq), 1:(ncol(DS)-1)]
head(DS)
summary(DS)
DS = dummy.data.frame(DS, names = c("MaritalStatus"))
DS$MaritalStatusDivorced = as.factor(DS$MaritalStatusDivorced)
DS$MaritalStatusMarried = as.factor(DS$MaritalStatusMarried)
levels(DS$MaritalStatusDivorced)
levels(DS$MaritalStatusDivorced) = c("No", "Yes")
levels(DS$MaritalStatusMarried) = c("No", "Yes")
colnames(DS)[1:2] = c("Divorced", "Married")
head(DS)
personas = as(DS, "transactions")
itemFrequencyPlot(personas, support = 0.1, cex.names=0.8)
itemsets = apriori(personas, parameter = list(support = 0.1, target = "frequent", minlen=2))
itemsets = sort(itemsets, by="support")
#inspect(subset(itemsets))
inspect(subset(itemsets, subset = items %pin% "Gender=" & items %in% "ExtramaritalSex=No"))
reglas = apriori(personas, parameter = list(support = 0.1, confidence = 0.8, minlen = 2))
rulesSorted = sort(reglas, by = "confidence")
subsetMatrix <- is.subset(rulesSorted, rulesSorted)
subsetMatrix[lower.tri(subsetMatrix, diag=TRUE)] <- FALSE
redundant <- colSums(subsetMatrix, na.rm=TRUE) >= 1
rulesPruned <- rulesSorted[!redundant] # remove redundant rules
sin_redundantes = rulesPruned[-c(1,3,5,7,9,13,17,20)]
inspect(sin_redundantes)
reglas2 = apriori(personas, parameter = list( confidence = 0.5, minlen = 2))
rulesSorted2 = sort(reglas2, by = "confidence")
subsetMatrix2 <- is.subset(rulesSorted2, rulesSorted2)
subsetMatrix2[lower.tri(subsetMatrix2, diag=TRUE)] <- FALSE
redundant2 <- colSums(subsetMatrix2, na.rm=TRUE) >= 1
rulesPruned2 <- rulesSorted2[!redundant2] # remove redundant rules
rulesPruned2 = rulesPruned2[-c(3,5,7,9,13,17,20,23,25,27,29,33)]
inspect(rulesPruned2)
setdiff(rulesPruned, rulesPruned2)
setdiff(sin_redundantes, rulesPruned2)
setdiff(sin_redundantes, rulesPruned2)
length(sin_redundantes)
rulesPruned2
setdiff(rulesPruned2, sin_redundantes)
knitr::opts_chunk$set(echo = TRUE)
library(arules)
library(dummies)
DS = read.csv("PreSex.csv")
DS = DS[,-1]
DS
DS <- DS[rep(row.names(DS), DS$Freq), 1:(ncol(DS)-1)]
head(DS)
summary(DS)
DS = dummy.data.frame(DS, names = c("MaritalStatus"))
DS$MaritalStatusDivorced = as.factor(DS$MaritalStatusDivorced)
DS$MaritalStatusMarried = as.factor(DS$MaritalStatusMarried)
levels(DS$MaritalStatusDivorced)
levels(DS$MaritalStatusDivorced) = c("No", "Yes")
levels(DS$MaritalStatusMarried) = c("No", "Yes")
colnames(DS)[1:2] = c("Divorced", "Married")
head(DS)
personas = as(DS, "transactions")
itemFrequencyPlot(personas, support = 0.1, cex.names=0.8)
itemsets = apriori(personas, parameter = list(support = 0.1, target = "frequent", minlen=2))
itemsets = sort(itemsets, by="support")
#inspect(subset(itemsets))
inspect(subset(itemsets, subset = items %pin% "Gender=" & items %in% "ExtramaritalSex=No"))
reglas = apriori(personas, parameter = list(support = 0.1, confidence = 0.8, minlen = 2))
rulesSorted = sort(reglas, by = "confidence")
subsetMatrix <- is.subset(rulesSorted, rulesSorted)
subsetMatrix[lower.tri(subsetMatrix, diag=TRUE)] <- FALSE
redundant <- colSums(subsetMatrix, na.rm=TRUE) >= 1
rulesPruned <- rulesSorted[!redundant] # remove redundant rules
sin_redundantes = rulesPruned[-c(1,3,5,7,9,13,17,20)]
inspect(sin_redundantes)
reglas2 = apriori(personas, parameter = list( confidence = 0.5, minlen = 2))
rulesSorted2 = sort(reglas2, by = "confidence")
subsetMatrix2 <- is.subset(rulesSorted2, rulesSorted2)
subsetMatrix2[lower.tri(subsetMatrix2, diag=TRUE)] <- FALSE
redundant2 <- colSums(subsetMatrix2, na.rm=TRUE) >= 1
rulesPruned2 <- rulesSorted2[!redundant2] # remove redundant rules
rulesPruned2 = rulesPruned2[-c(3,5,7,9,13,17,20,23,25,27,29,33)]
resta = setdiff(rulesPruned2, sin_redundantes)
knitr::opts_chunk$set(echo = TRUE)
library(arules)
library(dummies)
DS = read.csv("PreSex.csv")
DS = DS[,-1]
DS
DS <- DS[rep(row.names(DS), DS$Freq), 1:(ncol(DS)-1)]
head(DS)
summary(DS)
DS = dummy.data.frame(DS, names = c("MaritalStatus"))
DS$MaritalStatusDivorced = as.factor(DS$MaritalStatusDivorced)
DS$MaritalStatusMarried = as.factor(DS$MaritalStatusMarried)
levels(DS$MaritalStatusDivorced)
levels(DS$MaritalStatusDivorced) = c("No", "Yes")
levels(DS$MaritalStatusMarried) = c("No", "Yes")
colnames(DS)[1:2] = c("Divorced", "Married")
head(DS)
personas = as(DS, "transactions")
itemFrequencyPlot(personas, support = 0.1, cex.names=0.8)
itemsets = apriori(personas, parameter = list(support = 0.1, target = "frequent", minlen=2))
itemsets = sort(itemsets, by="support")
#inspect(subset(itemsets))
inspect(subset(itemsets, subset = items %pin% "Gender=" & items %in% "ExtramaritalSex=No"))
reglas = apriori(personas, parameter = list(support = 0.1, confidence = 0.8, minlen = 2))
rulesSorted = sort(reglas, by = "confidence")
subsetMatrix <- is.subset(rulesSorted, rulesSorted)
subsetMatrix[lower.tri(subsetMatrix, diag=TRUE)] <- FALSE
redundant <- colSums(subsetMatrix, na.rm=TRUE) >= 1
rulesPruned <- rulesSorted[!redundant] # remove redundant rules
sin_redundantes = rulesPruned[-c(1,3,5,7,9,13,17,20)]
inspect(sin_redundantes)
reglas2 = apriori(personas, parameter = list( confidence = 0.5, minlen = 2))
rulesSorted2 = sort(reglas2, by = "confidence")
subsetMatrix2 <- is.subset(rulesSorted2, rulesSorted2)
subsetMatrix2[lower.tri(subsetMatrix2, diag=TRUE)] <- FALSE
redundant2 <- colSums(subsetMatrix2, na.rm=TRUE) >= 1
rulesPruned2 <- rulesSorted2[!redundant2] # remove redundant rules
rulesPruned2 = rulesPruned2[-c(3,5,7,9,13,17,20,23,25,27,29,33)]
resta = setdiff(rulesPruned2, sin_redundantes)
inspect(resta)
inspect(subset(rulesPruned2, subset = lift >= 1.3 | lift <= 0.85))
inspect(subset(rulesPruned2, subset = lift >= 1.3 | lift <= 0.86))
knitr::opts_chunk$set(echo = TRUE)
library(arules)
library(dummies)
DS = read.csv("PreSex.csv")
DS = DS[,-1]
DS
DS <- DS[rep(row.names(DS), DS$Freq), 1:(ncol(DS)-1)]
head(DS)
summary(DS)
DS = dummy.data.frame(DS, names = c("MaritalStatus"))
DS$MaritalStatusDivorced = as.factor(DS$MaritalStatusDivorced)
DS$MaritalStatusMarried = as.factor(DS$MaritalStatusMarried)
levels(DS$MaritalStatusDivorced)
levels(DS$MaritalStatusDivorced) = c("No", "Yes")
levels(DS$MaritalStatusMarried) = c("No", "Yes")
colnames(DS)[1:2] = c("Divorced", "Married")
head(DS)
personas = as(DS, "transactions")
itemFrequencyPlot(personas, support = 0.1, cex.names=0.8)
itemsets = apriori(personas, parameter = list(support = 0.1, target = "frequent", minlen=2))
itemsets = sort(itemsets, by="support")
#inspect(subset(itemsets))
inspect(subset(itemsets, subset = items %pin% "Gender=" & items %in% "ExtramaritalSex=No"))
reglas = apriori(personas, parameter = list(support = 0.1, confidence = 0.8, minlen = 2))
rulesSorted = sort(reglas, by = "confidence")
subsetMatrix <- is.subset(rulesSorted, rulesSorted)
subsetMatrix[lower.tri(subsetMatrix, diag=TRUE)] <- FALSE
redundant <- colSums(subsetMatrix, na.rm=TRUE) >= 1
rulesPruned <- rulesSorted[!redundant] # remove redundant rules
sin_redundantes = rulesPruned[-c(1,3,5,7,9,13,17,20)]
inspect(sin_redundantes)
reglas2 = apriori(personas, parameter = list( confidence = 0.5, minlen = 2))
rulesSorted2 = sort(reglas2, by = "confidence")
subsetMatrix2 <- is.subset(rulesSorted2, rulesSorted2)
subsetMatrix2[lower.tri(subsetMatrix2, diag=TRUE)] <- FALSE
redundant2 <- colSums(subsetMatrix2, na.rm=TRUE) >= 1
rulesPruned2 <- rulesSorted2[!redundant2] # remove redundant rules
rulesPruned2 = rulesPruned2[-c(3,5,7,9,13,17,20,23,25,27,29,33)]
resta = setdiff(rulesPruned2, sin_redundantes)
inspect(resta)
inspect(subset(rulesPruned2, subset = lift >= 1.3 | lift <= 0.86))
knitr::opts_chunk$set(echo = TRUE)
library(arules)
library(dummies)
DS = read.csv("PreSex.csv")
DS = DS[,-1]
DS
DS <- DS[rep(row.names(DS), DS$Freq), 1:(ncol(DS)-1)]
head(DS)
summary(DS)
DS = dummy.data.frame(DS, names = c("MaritalStatus"))
DS$MaritalStatusDivorced = as.factor(DS$MaritalStatusDivorced)
DS$MaritalStatusMarried = as.factor(DS$MaritalStatusMarried)
levels(DS$MaritalStatusDivorced)
levels(DS$MaritalStatusDivorced) = c("No", "Yes")
levels(DS$MaritalStatusMarried) = c("No", "Yes")
colnames(DS)[1:2] = c("Divorced", "Married")
head(DS)
personas = as(DS, "transactions")
itemFrequencyPlot(personas, support = 0.1, cex.names=0.8)
itemsets = apriori(personas, parameter = list(support = 0.1, target = "frequent", minlen=2))
itemsets = sort(itemsets, by="support")
#inspect(subset(itemsets))
inspect(subset(itemsets, subset = items %pin% "Gender=" & items %in% "ExtramaritalSex=No"))
reglas = apriori(personas, parameter = list(support = 0.1, confidence = 0.8, minlen = 2))
rulesSorted = sort(reglas, by = "confidence")
subsetMatrix <- is.subset(rulesSorted, rulesSorted)
subsetMatrix[lower.tri(subsetMatrix, diag=TRUE)] <- FALSE
redundant <- colSums(subsetMatrix, na.rm=TRUE) >= 1
rulesPruned <- rulesSorted[!redundant] # remove redundant rules
sin_redundantes = rulesPruned[-c(1,3,5,7,9,13,17,20)]
inspect(sin_redundantes)
reglas2 = apriori(personas, parameter = list( confidence = 0.5, minlen = 2))
rulesSorted2 = sort(reglas2, by = "confidence")
subsetMatrix2 <- is.subset(rulesSorted2, rulesSorted2)
subsetMatrix2[lower.tri(subsetMatrix2, diag=TRUE)] <- FALSE
redundant2 <- colSums(subsetMatrix2, na.rm=TRUE) >= 1
rulesPruned2 <- rulesSorted2[!redundant2] # remove redundant rules
rulesPruned2 = rulesPruned2[-c(3,5,7,9,13,17,20,23,25,27,29,33)]
resta = setdiff(rulesPruned2, sin_redundantes)
inspect(resta)
inspect(subset(resta, subset = lift >= 1.3 | lift <= 0.86))
rulesPruned2
inspect(rulesPruned2)
itemsets
inspect(itemsets)
inspect(subset(itemsets, items %in% "Divorced=Yes" & items %in% "ExtramaritalSex=Yes")
)
inspect(subset(itemsets, items %in% "Divorced=Yes" & items %in% "ExtramaritalSex=Yes"))
inspect(subset(itemsets, items %in% "Divorced=No" & items %in% "ExtramaritalSex=Yes"))
inspect(subset(itemsets, items %in% "ExtramaritalSex=Yes"))
itemsets
inspect(subset(itemsets, subset=items %in% "ExtramaritalSex=Yes"))
inspect(subset(itemsets, subset=items %in% "ExtramaritalSex=Yes"))
itemsets
inspect(itemsets)
inspect(subset(itemsets, subset= items %in% "ExtramaritalSex=Yes"))
inspect(itemsets)
inspect(subset(itemsets, subset= items %pin% "ExtramaritalSex=Yes"))
inspect(itemsets)
inspect(subset(itemsets, subset= items %pin% "ExtramaritalSex=No"))
personas
inspect(personas)
itemsets = apriori(personas, parameter = list(support = 0.01, target = "frequent", minlen=2))
itemsets = sort(itemsets, by="support")
inspect(subset(itemsets, subset= items %pin% "ExtramaritalSex=Yes"))
inspect(subset(itemsets, items %in% "Divorced=No" & items %in% "ExtramaritalSex=Yes"))
inspect(subset(itemsets, items %in% "Divorced=Yes" & items %in% "ExtramaritalSex=Yes"))
itemsets = apriori(personas, parameter = list(support = 0.01, target = "frequent", minlen=1))
itemsets = sort(itemsets, by="support")
inspect(subset(itemsets, items %in% "ExtramaritalSex=Yes"))
sin_redundantes = rulesPruned[-c(1,3,5,7,9,13,17,20)]
inspect(sin_redundantes[,-5])
sin_redundantes = rulesPruned[-c(1,3,5,7,9,13,17,20)]
inspect(sin_redundantes)[,-5]
sin_redundantes = rulesPruned[-c(1,3,5,7,9,13,17,20)]
inspect(sin_redundantes)
sin_redundantes = rulesPruned[-c(1,3,5,7,9,13,17,20)]
inspect(sin_redundantes$lift)
sin_redundantes = rulesPruned[-c(1,3,5,7,9,13,17,20)]
inspect(sin_redundantes[lift])
sin_redundantes = rulesPruned[-c(1,3,5,7,9,13,17,20)]
inspect(sin_redundantes["lift"])
sin_redundantes = rulesPruned[-c(1,3,5,7,9,13,17,20)]
inspect(sin_redundantes)
knitr::opts_chunk$set(echo = TRUE)
library(arules)
library(dummies)
DS = read.csv("PreSex.csv")
DS = DS[,-1]
DS
DS <- DS[rep(row.names(DS), DS$Freq), 1:(ncol(DS)-1)]
head(DS)
summary(DS)
DS = dummy.data.frame(DS, names = c("MaritalStatus"))
DS$MaritalStatusDivorced = as.factor(DS$MaritalStatusDivorced)
DS$MaritalStatusMarried = as.factor(DS$MaritalStatusMarried)
levels(DS$MaritalStatusDivorced)
levels(DS$MaritalStatusDivorced) = c("No", "Yes")
levels(DS$MaritalStatusMarried) = c("No", "Yes")
colnames(DS)[1:2] = c("Divorced", "Married")
head(DS)
personas = as(DS, "transactions")
itemFrequencyPlot(personas, support = 0.1, cex.names=0.8)
itemsets = apriori(personas, parameter = list(support = 0.1, target = "frequent", minlen=2))
itemsets = sort(itemsets, by="support")
#inspect(subset(itemsets))
inspect(subset(itemsets, subset = items %pin% "Gender=" & items %in% "ExtramaritalSex=No"))
reglas = apriori(personas, parameter = list(support = 0.1, confidence = 0.8, minlen = 2))
rulesSorted = sort(reglas, by = "confidence")
subsetMatrix <- is.subset(rulesSorted, rulesSorted)
subsetMatrix[lower.tri(subsetMatrix, diag=TRUE)] <- FALSE
redundant <- colSums(subsetMatrix, na.rm=TRUE) >= 1
rulesPruned <- rulesSorted[!redundant] # remove redundant rules
sin_redundantes = rulesPruned[-c(1,3,5,7,9,13,17,20)]
inspect(sin_redundantes)
knitr::opts_chunk$set(echo = TRUE)
library(arules)
library(dummies)
DS = read.csv("PreSex.csv")
DS = DS[,-1]
DS
DS <- DS[rep(row.names(DS), DS$Freq), 1:(ncol(DS)-1)]
head(DS)
summary(DS)
DS = dummy.data.frame(DS, names = c("MaritalStatus"))
DS$MaritalStatusDivorced = as.factor(DS$MaritalStatusDivorced)
DS$MaritalStatusMarried = as.factor(DS$MaritalStatusMarried)
levels(DS$MaritalStatusDivorced)
levels(DS$MaritalStatusDivorced) = c("No", "Yes")
levels(DS$MaritalStatusMarried) = c("No", "Yes")
colnames(DS)[1:2] = c("Divorced", "Married")
head(DS)
personas = as(DS, "transactions")
itemFrequencyPlot(personas, support = 0.1, cex.names=0.8)
itemsets = apriori(personas, parameter = list(support = 0.1, target = "frequent", minlen=2))
itemsets = sort(itemsets, by="support")
#inspect(subset(itemsets))
inspect(subset(itemsets, subset = items %pin% "Gender=" & items %in% "ExtramaritalSex=No"))
reglas = apriori(personas, parameter = list(support = 0.1, confidence = 0.8, minlen = 2))
rulesSorted = sort(reglas, by = "confidence")
subsetMatrix <- is.subset(rulesSorted, rulesSorted)
subsetMatrix[lower.tri(subsetMatrix, diag=TRUE)] <- FALSE
redundant <- colSums(subsetMatrix, na.rm=TRUE) >= 1
rulesPruned <- rulesSorted[!redundant] # remove redundant rules
sin_redundantes = rulesPruned[-c(1,3,5,7,9,13,17,20)]
inspect(sin_redundantes)
reglas2 = apriori(personas, parameter = list( confidence = 0.5, minlen = 2))
rulesSorted2 = sort(reglas2, by = "confidence")
subsetMatrix2 <- is.subset(rulesSorted2, rulesSorted2)
subsetMatrix2[lower.tri(subsetMatrix2, diag=TRUE)] <- FALSE
redundant2 <- colSums(subsetMatrix2, na.rm=TRUE) >= 1
rulesPruned2 <- rulesSorted2[!redundant2] # remove redundant rules
rulesPruned2 = rulesPruned2[-c(3,5,7,9,13,17,20,23,25,27,29,33)]
resta = setdiff(rulesPruned2, sin_redundantes)
inspect(resta)
inspect(subset(resta, subset = lift >= 1.3 | lift <= 0.86))
knitr::opts_chunk$set(echo = TRUE)
library(arules)
library(dummies)
DS = read.csv("PreSex.csv")
DS = DS[,-1]
DS
DS <- DS[rep(row.names(DS), DS$Freq), 1:(ncol(DS)-1)]
head(DS)
summary(DS)
DS = dummy.data.frame(DS, names = c("MaritalStatus"))
DS$MaritalStatusDivorced = as.factor(DS$MaritalStatusDivorced)
DS$MaritalStatusMarried = as.factor(DS$MaritalStatusMarried)
levels(DS$MaritalStatusDivorced)
levels(DS$MaritalStatusDivorced) = c("No", "Yes")
levels(DS$MaritalStatusMarried) = c("No", "Yes")
colnames(DS)[1:2] = c("Divorced", "Married")
head(DS)
personas = as(DS, "transactions")
itemFrequencyPlot(personas, support = 0.1, cex.names=0.8)
itemsets = apriori(personas, parameter = list(support = 0.1, target = "frequent", minlen=2))
itemsets = sort(itemsets, by="support")
#inspect(subset(itemsets))
inspect(subset(itemsets, subset = items %pin% "Gender=" & items %in% "ExtramaritalSex=No"))
reglas = apriori(personas, parameter = list(support = 0.1, confidence = 0.8, minlen = 2))
rulesSorted = sort(reglas, by = "confidence")
subsetMatrix <- is.subset(rulesSorted, rulesSorted)
subsetMatrix[lower.tri(subsetMatrix, diag=TRUE)] <- FALSE
redundant <- colSums(subsetMatrix, na.rm=TRUE) >= 1
rulesPruned <- rulesSorted[!redundant] # remove redundant rules
sin_redundantes = rulesPruned[-c(1,3,5,7,9,13,17,20)]
inspect(sin_redundantes)
reglas2 = apriori(personas, parameter = list( confidence = 0.5, minlen = 2))
rulesSorted2 = sort(reglas2, by = "confidence")
subsetMatrix2 <- is.subset(rulesSorted2, rulesSorted2)
subsetMatrix2[lower.tri(subsetMatrix2, diag=TRUE)] <- FALSE
redundant2 <- colSums(subsetMatrix2, na.rm=TRUE) >= 1
rulesPruned2 <- rulesSorted2[!redundant2] # remove redundant rules
rulesPruned2 = rulesPruned2[-c(3,5,7,9,13,17,20,23,25,27,29,33)]
resta = setdiff(rulesPruned2, sin_redundantes)
inspect(resta)
knitr::opts_chunk$set(echo = TRUE)
library(arules)
library(dummies)
DS = read.csv("PreSex.csv")
DS
nrow(DS)
knitr::opts_chunk$set(echo = TRUE)
library(arules)
library(dummies)
DS = read.csv("PreSex.csv")
DS
DS = DS[,-1]
DS
DS <- DS[rep(row.names(DS), DS$Freq), 1:(ncol(DS)-1)]
head(DS)
nrow(DS)
knitr::opts_chunk$set(echo = TRUE)
library(arules)
library(dummies)
DS = read.csv("PreSex.csv")
DS
DS = DS[,-1]
DS
DS <- DS[rep(row.names(DS), DS$Freq), 1:(ncol(DS)-1)]
head(DS)
summary(DS)
DS = dummy.data.frame(DS, names = c("MaritalStatus"))
DS$MaritalStatusDivorced = as.factor(DS$MaritalStatusDivorced)
DS$MaritalStatusMarried = as.factor(DS$MaritalStatusMarried)
levels(DS$MaritalStatusDivorced) = c("No", "Yes")
levels(DS$MaritalStatusMarried) = c("No", "Yes")
colnames(DS)[1:2] = c("Divorced", "Married")
head(DS)
knitr::opts_chunk$set(echo = TRUE)
library(arules)
library(dummies)
DS = read.csv("PreSex.csv")
DS
DS = DS[,-1]
DS
DS <- DS[rep(row.names(DS), DS$Freq), 1:(ncol(DS)-1)]
head(DS)
summary(DS)
DS = dummy.data.frame(DS, names = c("MaritalStatus"))
DS$MaritalStatusDivorced = as.factor(DS$MaritalStatusDivorced)
DS$MaritalStatusMarried = as.factor(DS$MaritalStatusMarried)
levels(DS$MaritalStatusDivorced) = c("No", "Yes")
levels(DS$MaritalStatusMarried) = c("No", "Yes")
colnames(DS)[1:2] = c("Divorced", "Married")
head(DS)
library(dplyr)
library(Hmisc)
library(mice)
library(Amelia)
library(PerformanceAnalytics)
library(caret)
train = read.csv("train.csv", na.string=c(" ", "NA", "?"))
setwd
setwd(/Users/samuel/Documents/Universidad/Master/mineria_datos_preprocesamiento/practica_final)
setwd("/Users/samuel/Documents/Universidad/Master/mineria_datos_preprocesamiento/practica_final")
getwd()
train = read.csv("train.csv", na.string=c(" ", "NA", "?"))
summary(train)
nrow(train)
ncol(train)
knitr::opts_chunk$set(echo = TRUE)
#Librerías a usar:
library(dplyr)
library(Hmisc)
library(mice)
library(Amelia)
library(PerformanceAnalytics)
library(caret)
#lectura de datos:
train = read.csv("train.csv", na.string=c(" ", "NA", "?"))
test = read.csv("test.csv", na.string=c(" ", "NA", "?"))
#Pasamos a formato TIBBLE:
train = as_tibble(train)
test = as_tibble(test)
